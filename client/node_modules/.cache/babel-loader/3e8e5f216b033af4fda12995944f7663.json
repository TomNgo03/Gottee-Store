{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tung Ngo\\\\ecommerce\\\\client\\\\src\\\\components\\\\mainpages\\\\createProduct\\\\CreateProduct.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { GlobalState } from '../../../GlobalState';\nimport Loading from '../utils/loading/Loading';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  product_id: '',\n  title: '',\n  price: 0,\n  description: 'How to and tutorial videos of cool CSS effect, Web Design ideas,JavaScript libraries, Node.',\n  content: 'Welcome to our channel Dev AT. Here you can learn web designing, UI/UX designing, html css tutorials, css animations and css effects, javascript and jquery tutorials and related so on.',\n  category: '',\n  _id: ''\n};\n\nfunction CreateProduct() {\n  // const state = useContext(GlobalState)\n  // const [product, setProduct] = useState(initialState)\n  // const [categories] = state.categoriesAPI.categories\n  // const [images, setImages] = useState(false)\n  // const [loading, setLoading] = useState(false)\n  // const [isAdmin] = state.userAPI.isAdmin\n  // const [token] = state.token\n  // const navigate = useNavigate()\n  // const param = useParams()\n  // const [products] = state.productsAPI.products\n  // const [onEdit, setOnEdit] = useState(false)\n  // const [callback, setCallback] = state.productsAPI.callback\n  // useEffect(() => {\n  //     if(param.id){\n  //         setOnEdit(true)\n  //         products.forEach(product => {\n  //             if(product._id === param.id) {\n  //                 setProduct(product)\n  //                 setImages(product.images)\n  //             }\n  //         })\n  //     }else{\n  //         setOnEdit(false)\n  //         setProduct(initialState)\n  //         setImages(false)\n  //     }\n  // }, [param.id, products])\n  // const handleUpload = async e =>{\n  //     e.preventDefault()\n  //     try {\n  //         if(!isAdmin) return alert(\"You're not an admin\")\n  //         const file = e.target.files[0]\n  //         if(!file) return alert(\"File not exist.\")\n  //         if(file.size > 1024 * 1024) // 1mb\n  //             return alert(\"Size too large!\")\n  //         if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\n  //             return alert(\"File format is incorrect.\")\n  //         let formData = new FormData()\n  //         formData.append('file', file)\n  //         setLoading(true)\n  //         const res = await axios.post('/api/upload', formData, {\n  //             headers: {'content-type': 'multipart/form-data', Authorization: token}\n  //         })\n  //         setLoading(false)\n  //         setImages(res.data)\n  //     } catch (err) {\n  //         alert(err.response.data.msg)\n  //     }\n  // }\n  // const handleDestroy = async () => {\n  //     try {\n  //         if(!isAdmin) return alert(\"You're not an admin\")\n  //         setLoading(true)\n  //         await axios.post('/api/destroy', {public_id: images.public_id}, {\n  //             headers: {Authorization: token}\n  //         })\n  //         setLoading(false)\n  //         setImages(false)\n  //     } catch (err) {\n  //         alert(err.response.data.msg)\n  //     }\n  // }\n  // const handleChangeInput = e =>{\n  //     const {name, value} = e.target\n  //     setProduct({...product, [name]:value})\n  // }\n  // const handleSubmit = async e =>{\n  //     e.preventDefault()\n  //     try {\n  //         if(!isAdmin) return alert(\"You're not an admin\")\n  //         if(!images) return alert(\"No Image Upload\")\n  //         if(onEdit){\n  //             await axios.put(`/api/products/${product._id}`, {...product, images}, {\n  //                 headers: {Authorization: token}\n  //             })\n  //         }else{\n  //             await axios.post('/api/products', {...product, images}, {\n  //                 headers: {Authorization: token}\n  //             })\n  //         }\n  //         setCallback(!callback)\n  //         navigate('/')\n  //     } catch (err) {\n  //         alert(err.response.data.msg)\n  //     }\n  // }\n  // const styleUpload = {\n  //     display: images ? \"block\" : \"none\"\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create_product\",\n    children: \" alo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n}\n\n_c = CreateProduct;\nexport default CreateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProduct\");","map":{"version":3,"names":["React","useState","useContext","useEffect","axios","GlobalState","Loading","useNavigate","useParams","initialState","product_id","title","price","description","content","category","_id","CreateProduct"],"sources":["C:/Users/Tung Ngo/ecommerce/client/src/components/mainpages/createProduct/CreateProduct.js"],"sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport Loading from '../utils/loading/Loading'\r\nimport {useNavigate, useParams} from 'react-router-dom'\r\n\r\nconst initialState = {\r\n    product_id: '',\r\n    title: '',\r\n    price: 0,\r\n    description: 'How to and tutorial videos of cool CSS effect, Web Design ideas,JavaScript libraries, Node.',\r\n    content: 'Welcome to our channel Dev AT. Here you can learn web designing, UI/UX designing, html css tutorials, css animations and css effects, javascript and jquery tutorials and related so on.',\r\n    category: '',\r\n    _id: ''\r\n}\r\n\r\nfunction CreateProduct() {\r\n    // const state = useContext(GlobalState)\r\n    // const [product, setProduct] = useState(initialState)\r\n    // const [categories] = state.categoriesAPI.categories\r\n    // const [images, setImages] = useState(false)\r\n    // const [loading, setLoading] = useState(false)\r\n\r\n\r\n    // const [isAdmin] = state.userAPI.isAdmin\r\n    // const [token] = state.token\r\n\r\n    // const navigate = useNavigate()\r\n    // const param = useParams()\r\n\r\n    // const [products] = state.productsAPI.products\r\n    // const [onEdit, setOnEdit] = useState(false)\r\n    // const [callback, setCallback] = state.productsAPI.callback\r\n\r\n    // useEffect(() => {\r\n    //     if(param.id){\r\n    //         setOnEdit(true)\r\n    //         products.forEach(product => {\r\n    //             if(product._id === param.id) {\r\n    //                 setProduct(product)\r\n    //                 setImages(product.images)\r\n    //             }\r\n    //         })\r\n    //     }else{\r\n    //         setOnEdit(false)\r\n    //         setProduct(initialState)\r\n    //         setImages(false)\r\n    //     }\r\n    // }, [param.id, products])\r\n\r\n    // const handleUpload = async e =>{\r\n    //     e.preventDefault()\r\n    //     try {\r\n    //         if(!isAdmin) return alert(\"You're not an admin\")\r\n    //         const file = e.target.files[0]\r\n            \r\n    //         if(!file) return alert(\"File not exist.\")\r\n\r\n    //         if(file.size > 1024 * 1024) // 1mb\r\n    //             return alert(\"Size too large!\")\r\n\r\n    //         if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\r\n    //             return alert(\"File format is incorrect.\")\r\n\r\n    //         let formData = new FormData()\r\n    //         formData.append('file', file)\r\n\r\n    //         setLoading(true)\r\n    //         const res = await axios.post('/api/upload', formData, {\r\n    //             headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n    //         })\r\n    //         setLoading(false)\r\n    //         setImages(res.data)\r\n\r\n    //     } catch (err) {\r\n    //         alert(err.response.data.msg)\r\n    //     }\r\n    // }\r\n\r\n    // const handleDestroy = async () => {\r\n    //     try {\r\n    //         if(!isAdmin) return alert(\"You're not an admin\")\r\n    //         setLoading(true)\r\n    //         await axios.post('/api/destroy', {public_id: images.public_id}, {\r\n    //             headers: {Authorization: token}\r\n    //         })\r\n    //         setLoading(false)\r\n    //         setImages(false)\r\n    //     } catch (err) {\r\n    //         alert(err.response.data.msg)\r\n    //     }\r\n    // }\r\n\r\n    // const handleChangeInput = e =>{\r\n    //     const {name, value} = e.target\r\n    //     setProduct({...product, [name]:value})\r\n    // }\r\n\r\n    // const handleSubmit = async e =>{\r\n    //     e.preventDefault()\r\n    //     try {\r\n    //         if(!isAdmin) return alert(\"You're not an admin\")\r\n    //         if(!images) return alert(\"No Image Upload\")\r\n\r\n    //         if(onEdit){\r\n    //             await axios.put(`/api/products/${product._id}`, {...product, images}, {\r\n    //                 headers: {Authorization: token}\r\n    //             })\r\n    //         }else{\r\n    //             await axios.post('/api/products', {...product, images}, {\r\n    //                 headers: {Authorization: token}\r\n    //             })\r\n    //         }\r\n    //         setCallback(!callback)\r\n    //         navigate('/')\r\n    //     } catch (err) {\r\n    //         alert(err.response.data.msg)\r\n    //     }\r\n    // }\r\n\r\n    // const styleUpload = {\r\n    //     display: images ? \"block\" : \"none\"\r\n    // }\r\n    return (\r\n        <div className=\"create_product\"> alo\r\n            {/* <div className=\"upload\">\r\n                <input type=\"file\" name=\"file\" id=\"file_up\" onChange={handleUpload}/>\r\n                {\r\n                    loading ? <div id=\"file_img\"><Loading /></div>\r\n\r\n                    :<div id=\"file_img\" style={styleUpload}>\r\n                        <img src={images ? images.url : ''} alt=\"\"/>\r\n                        <span onClick={handleDestroy}>X</span>\r\n                    </div>\r\n                }\r\n                \r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"product_id\">Product ID</label>\r\n                    <input type=\"text\" name=\"product_id\" id=\"product_id\" required\r\n                    value={product.product_id} onChange={handleChangeInput} disabled={onEdit} />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" name=\"title\" id=\"title\" required\r\n                    value={product.title} onChange={handleChangeInput} />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"price\">Price</label>\r\n                    <input type=\"number\" name=\"price\" id=\"price\" required\r\n                    value={product.price} onChange={handleChangeInput} />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"description\">Description</label>\r\n                    <textarea type=\"text\" name=\"description\" id=\"description\" required\r\n                    value={product.description} rows=\"5\" onChange={handleChangeInput} />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"content\">Content</label>\r\n                    <textarea type=\"text\" name=\"content\" id=\"content\" required\r\n                    value={product.content} rows=\"7\" onChange={handleChangeInput} />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"categories\">Categories: </label>\r\n                    <select name=\"category\" value={product.category} onChange={handleChangeInput} >\r\n                        <option value=\"\">Please select a category</option>\r\n                        {\r\n                            categories.map(category => (\r\n                                <option value={category._id} key={category._id}>\r\n                                    {category.name}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n\r\n                <button type=\"submit\">{onEdit? \"Update\" : \"Create\"}</button>\r\n            </form> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateProduct"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAAQC,WAAR,EAAqBC,SAArB,QAAqC,kBAArC;;AAEA,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,EADK;EAEjBC,KAAK,EAAE,EAFU;EAGjBC,KAAK,EAAE,CAHU;EAIjBC,WAAW,EAAE,6FAJI;EAKjBC,OAAO,EAAE,0LALQ;EAMjBC,QAAQ,EAAE,EANO;EAOjBC,GAAG,EAAE;AAPY,CAArB;;AAUA,SAASC,aAAT,GAAyB;EACrB;EACA;EACA;EACA;EACA;EAGA;EACA;EAEA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EAEA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA,oBACI;IAAK,SAAS,EAAC,gBAAf;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgEH;;KA3KQA,a;AA6KT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}